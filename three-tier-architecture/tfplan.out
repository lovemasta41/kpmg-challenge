[0m[33mRunning plan in the remote backend. Output will stream here. Pressing Ctrl-C
will stop streaming the logs, but will not stop the plan running remotely.[0m

Preparing the remote plan...
[0m
[0m[33mTo view this run in a browser, visit:
https://app.terraform.io/app/Zurich-GCF/gtotest-sample1-dev-account-infra/runs/run-uCtEv4NCYraFykA2[0m
[0m
Waiting for the plan to start...

Terraform v1.3.1
on linux_amd64
Initializing plugins and modules...
[0m[1mdata.aws_availability_zones.available: Reading...[0m[0m
[0m[1mdata.aws_ssm_parameter.db_master_credentials: Reading...[0m[0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=eu-west-1][0m
[0m[1mdata.aws_vpc_ipam_pool.ipam_pool: Reading...[0m[0m
[0m[1mdata.aws_availability_zones.available: Read complete after 1s [id=eu-west-1][0m
[0m[1mdata.aws_ssm_parameter.db_master_credentials: Read complete after 1s [id=/platform/landing_zone][0m
[0m[1mdata.aws_vpc_ipam_pool.ipam_pool: Read complete after 1s [id=ipam-pool-06b8005b3ab484b83][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_autoscaling_attachment.app_asg_attachment[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_autoscaling_attachment" "app_asg_attachment" {
      [32m+[0m [0m[1m[0malb_target_group_arn[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mautoscaling_group_name[0m[0m = "app_asg"
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
    }

[1m  # aws_autoscaling_attachment.web_asg_attachment[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_autoscaling_attachment" "web_asg_attachment" {
      [32m+[0m [0m[1m[0malb_target_group_arn[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mautoscaling_group_name[0m[0m = "web_asg"
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
    }

[1m  # aws_autoscaling_group.app_asg[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "app_asg" {
      [32m+[0m [0m[1m[0marn[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zones[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mdefault_cooldown[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mdesired_capacity[0m[0m          = 1
      [32m+[0m [0m[1m[0mforce_delete[0m[0m              = true
      [32m+[0m [0m[1m[0mforce_delete_warm_pool[0m[0m    = false
      [32m+[0m [0m[1m[0mhealth_check_grace_period[0m[0m = 300
      [32m+[0m [0m[1m[0mhealth_check_type[0m[0m         = "ELB"
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mmax_size[0m[0m                  = 2
      [32m+[0m [0m[1m[0mmetrics_granularity[0m[0m       = "1Minute"
      [32m+[0m [0m[1m[0mmin_size[0m[0m                  = 1
      [32m+[0m [0m[1m[0mname[0m[0m                      = "app_asg"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mprotect_from_scale_in[0m[0m     = false
      [32m+[0m [0m[1m[0mservice_linked_role_arn[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mvpc_zone_identifier[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mwait_for_capacity_timeout[0m[0m = "10m"

      [32m+[0m [0mlaunch_template {
          [32m+[0m [0m[1m[0mid[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mversion[0m[0m = "$Latest"
        }

      [32m+[0m [0mtag {
          [32m+[0m [0m[1m[0mkey[0m[0m                 = "environement"
          [32m+[0m [0m[1m[0mpropagate_at_launch[0m[0m = true
          [32m+[0m [0m[1m[0mvalue[0m[0m               = "uat"
        }
      [32m+[0m [0mtag {
          [32m+[0m [0m[1m[0mkey[0m[0m                 = "name"
          [32m+[0m [0m[1m[0mpropagate_at_launch[0m[0m = true
          [32m+[0m [0m[1m[0mvalue[0m[0m               = "web-asg"
        }
    }

[1m  # aws_autoscaling_group.web_asg[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "web_asg" {
      [32m+[0m [0m[1m[0marn[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mavailability_zones[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mdefault_cooldown[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mdesired_capacity[0m[0m          = 1
      [32m+[0m [0m[1m[0mforce_delete[0m[0m              = true
      [32m+[0m [0m[1m[0mforce_delete_warm_pool[0m[0m    = false
      [32m+[0m [0m[1m[0mhealth_check_grace_period[0m[0m = 300
      [32m+[0m [0m[1m[0mhealth_check_type[0m[0m         = "ELB"
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mmax_size[0m[0m                  = 2
      [32m+[0m [0m[1m[0mmetrics_granularity[0m[0m       = "1Minute"
      [32m+[0m [0m[1m[0mmin_size[0m[0m                  = 1
      [32m+[0m [0m[1m[0mname[0m[0m                      = "web_asg"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mprotect_from_scale_in[0m[0m     = false
      [32m+[0m [0m[1m[0mservice_linked_role_arn[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mvpc_zone_identifier[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mwait_for_capacity_timeout[0m[0m = "10m"

      [32m+[0m [0mlaunch_template {
          [32m+[0m [0m[1m[0mid[0m[0m      = (known after apply)
          [32m+[0m [0m[1m[0mname[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mversion[0m[0m = "$Latest"
        }

      [32m+[0m [0mtag {
          [32m+[0m [0m[1m[0mkey[0m[0m                 = "environement"
          [32m+[0m [0m[1m[0mpropagate_at_launch[0m[0m = true
          [32m+[0m [0m[1m[0mvalue[0m[0m               = "uat"
        }
      [32m+[0m [0mtag {
          [32m+[0m [0m[1m[0mkey[0m[0m                 = "name"
          [32m+[0m [0m[1m[0mpropagate_at_launch[0m[0m = true
          [32m+[0m [0m[1m[0mvalue[0m[0m               = "web-asg"
        }
    }

[1m  # aws_db_instance.primary_instance[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_db_instance" "primary_instance" {
      [32m+[0m [0m[1m[0maddress[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mallocated_storage[0m[0m                     = 200
      [32m+[0m [0m[1m[0mapply_immediately[0m[0m                     = false
      [32m+[0m [0m[1m[0marn[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0mauto_minor_version_upgrade[0m[0m            = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                     = "eu-west-1a"
      [32m+[0m [0m[1m[0mbackup_retention_period[0m[0m               = 7
      [32m+[0m [0m[1m[0mbackup_window[0m[0m                         = "05:00-06:00"
      [32m+[0m [0m[1m[0mca_cert_identifier[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcharacter_set_name[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcopy_tags_to_snapshot[0m[0m                 = false
      [32m+[0m [0m[1m[0mdb_name[0m[0m                               = "mysqlserver"
      [32m+[0m [0m[1m[0mdb_subnet_group_name[0m[0m                  = "primary-subnet-group"
      [32m+[0m [0m[1m[0mdelete_automated_backups[0m[0m              = true
      [32m+[0m [0m[1m[0mendpoint[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mengine[0m[0m                                = "mysql"
      [32m+[0m [0m[1m[0mengine_version[0m[0m                        = "8.0"
      [32m+[0m [0m[1m[0mengine_version_actual[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0midentifier[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0midentifier_prefix[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_class[0m[0m                        = "i3.large"
      [32m+[0m [0m[1m[0miops[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mlatest_restorable_time[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mlicense_model[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mlistener_endpoint[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mmaintenance_window[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmaster_user_secret[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmaster_user_secret_kms_key_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mmax_allocated_storage[0m[0m                 = 200
      [32m+[0m [0m[1m[0mmonitoring_interval[0m[0m                   = 0
      [32m+[0m [0m[1m[0mmonitoring_role_arn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mmulti_az[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mnchar_character_set_name[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_type[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0moption_group_name[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mparameter_group_name[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mpassword[0m[0m                              = (sensitive value)
      [32m+[0m [0m[1m[0mperformance_insights_enabled[0m[0m          = false
      [32m+[0m [0m[1m[0mperformance_insights_kms_key_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mperformance_insights_retention_period[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mpublicly_accessible[0m[0m                   = false
      [32m+[0m [0m[1m[0mreplica_mode[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mreplicas[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mresource_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mskip_final_snapshot[0m[0m                   = false
      [32m+[0m [0m[1m[0msnapshot_identifier[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mstorage_throughput[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mstorage_type[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mtimezone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0musername[0m[0m                              = (sensitive)
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m                = (known after apply)
    }

[1m  # aws_db_instance.read_replica_instance[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_db_instance" "read_replica_instance" {
      [32m+[0m [0m[1m[0maddress[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mallocated_storage[0m[0m                     = 200
      [32m+[0m [0m[1m[0mapply_immediately[0m[0m                     = false
      [32m+[0m [0m[1m[0marn[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0mauto_minor_version_upgrade[0m[0m            = true
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                     = "eu-west-1b"
      [32m+[0m [0m[1m[0mbackup_retention_period[0m[0m               = 7
      [32m+[0m [0m[1m[0mbackup_window[0m[0m                         = "05:00-06:00"
      [32m+[0m [0m[1m[0mca_cert_identifier[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcharacter_set_name[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mcopy_tags_to_snapshot[0m[0m                 = false
      [32m+[0m [0m[1m[0mdb_name[0m[0m                               = "mysqlserver"
      [32m+[0m [0m[1m[0mdb_subnet_group_name[0m[0m                  = "replica-subnet-group"
      [32m+[0m [0m[1m[0mdelete_automated_backups[0m[0m              = true
      [32m+[0m [0m[1m[0mendpoint[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mengine[0m[0m                                = "mysql"
      [32m+[0m [0m[1m[0mengine_version[0m[0m                        = "8.0"
      [32m+[0m [0m[1m[0mengine_version_actual[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0midentifier[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0midentifier_prefix[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_class[0m[0m                        = "i3.large"
      [32m+[0m [0m[1m[0miops[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mlatest_restorable_time[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mlicense_model[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mlistener_endpoint[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mmaintenance_window[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmaster_user_secret[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmaster_user_secret_kms_key_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mmax_allocated_storage[0m[0m                 = 200
      [32m+[0m [0m[1m[0mmonitoring_interval[0m[0m                   = 0
      [32m+[0m [0m[1m[0mmonitoring_role_arn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mmulti_az[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mnchar_character_set_name[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_type[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0moption_group_name[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mparameter_group_name[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mpassword[0m[0m                              = (sensitive value)
      [32m+[0m [0m[1m[0mperformance_insights_enabled[0m[0m          = false
      [32m+[0m [0m[1m[0mperformance_insights_kms_key_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mperformance_insights_retention_period[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mpublicly_accessible[0m[0m                   = false
      [32m+[0m [0m[1m[0mreplica_mode[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mreplicas[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mreplicate_source_db[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mresource_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mskip_final_snapshot[0m[0m                   = false
      [32m+[0m [0m[1m[0msnapshot_identifier[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mstorage_throughput[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mstorage_type[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0mtimezone[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0musername[0m[0m                              = (sensitive)
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m                = (known after apply)
    }

[1m  # aws_db_subnet_group.primary_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "primary_group" {
      [32m+[0m [0m[1m[0marn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m             = "Managed by Terraform"
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                    = "primary-subnet-group"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0msupported_network_types[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                = (known after apply)
    }

[1m  # aws_db_subnet_group.replica_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "replica_group" {
      [32m+[0m [0m[1m[0marn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m             = "Managed by Terraform"
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                    = "replica-subnet-group"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m              = [
          [32m+[0m [0m"",
        ]
      [32m+[0m [0m[1m[0msupported_network_types[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                = (known after apply)
    }

[1m  # aws_eip.web_eip[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eip" "web_eip" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mcarrier_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ip[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mvpc[0m[0m                  = true
    }

[1m  # aws_internet_gateway.new_igw[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "new_igw" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = {
          [32m+[0m [0m"Name"        = "vpc-uat-igw"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m = {
          [32m+[0m [0m"Name"        = "vpc-uat-igw"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # aws_launch_template.app_launch_template[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_launch_template" "app_launch_template" {
      [32m+[0m [0m[1m[0marn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mdefault_version[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdisable_api_termination[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mimage_id[0m[0m                = "ami-07da0250e5552b1e4"
      [32m+[0m [0m[1m[0minstance_type[0m[0m           = "t3.xlarge"
      [32m+[0m [0m[1m[0mkey_name[0m[0m                = "default"
      [32m+[0m [0m[1m[0mlatest_version[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                    = "app-launch-template"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                    = {
          [32m+[0m [0m"Name"        = "APP-launch-template"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                = {
          [32m+[0m [0m"Name"        = "APP-launch-template"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0muser_data[0m[0m               = "IyEvYmluL2Jhc2gKeXVtIHVwZGF0ZSAteQp5dW0gaW5zdGFsbCAteSBodHRwZApzeXN0ZW1jdGwgc3RhcnQgaHR0cGQKc3lzdGVtY3RsIGVuYWJsZSBodHRwZAoKY2QgL3Zhci93d3cvaHRtbAoKc3VkbyBlY2hvICI8aDE+Q09NUEFOWSBMT0dJTiBQQUdFPC9oMT4iID4gaW5kZXguaHRtbCA="
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m  = (known after apply)

      [32m+[0m [0mcpu_options {
          [32m+[0m [0m[1m[0mcore_count[0m[0m       = 4
          [32m+[0m [0m[1m[0mthreads_per_core[0m[0m = 2
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_protocol_ipv6[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }
    }

[1m  # aws_launch_template.web_launch_template[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_launch_template" "web_launch_template" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdefault_version[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mimage_id[0m[0m               = "ami-07da0250e5552b1e4"
      [32m+[0m [0m[1m[0minstance_type[0m[0m          = "t3.xlarge"
      [32m+[0m [0m[1m[0mkey_name[0m[0m               = "default"
      [32m+[0m [0m[1m[0mlatest_version[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "web-launch-template"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name"        = "web-launch-template"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name"        = "web-launch-template"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0muser_data[0m[0m              = "IyEvYmluL2Jhc2gKeXVtIHVwZGF0ZSAteQp5dW0gaW5zdGFsbCAteSBodHRwZApzeXN0ZW1jdGwgc3RhcnQgaHR0cGQKc3lzdGVtY3RsIGVuYWJsZSBodHRwZAoKY2QgL3Zhci93d3cvaHRtbAoKc3VkbyBlY2hvICI8aDE+Q09NUEFOWSBXRUJTSVRFPC9oMT4iID4gaW5kZXguaHRtbCA="
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m = (known after apply)

      [32m+[0m [0mcpu_options {
          [32m+[0m [0m[1m[0mcore_count[0m[0m       = 4
          [32m+[0m [0m[1m[0mthreads_per_core[0m[0m = 2
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_protocol_ipv6[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0minstance_metadata_tags[0m[0m      = (known after apply)
        }
    }

[1m  # aws_lb.app_alb[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb" "app_alb" {
      [32m+[0m [0m[1m[0marn[0m[0m                                         = (known after apply)
      [32m+[0m [0m[1m[0marn_suffix[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mdesync_mitigation_mode[0m[0m                      = "defensive"
      [32m+[0m [0m[1m[0mdns_name[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mdrop_invalid_header_fields[0m[0m                  = false
      [32m+[0m [0m[1m[0menable_deletion_protection[0m[0m                  = false
      [32m+[0m [0m[1m[0menable_http2[0m[0m                                = true
      [32m+[0m [0m[1m[0menable_tls_version_and_cipher_suite_headers[0m[0m = false
      [32m+[0m [0m[1m[0menable_waf_fail_open[0m[0m                        = false
      [32m+[0m [0m[1m[0menable_xff_client_port[0m[0m                      = false
      [32m+[0m [0m[1m[0mid[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0midle_timeout[0m[0m                                = 60
      [32m+[0m [0m[1m[0minternal[0m[0m                                    = false
      [32m+[0m [0m[1m[0mip_address_type[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mload_balancer_type[0m[0m                          = "application"
      [32m+[0m [0m[1m[0mname[0m[0m                                        = "vpc-uat-app-lb"
      [32m+[0m [0m[1m[0mpreserve_host_header[0m[0m                        = false
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0msubnets[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                        = {
          [32m+[0m [0m"Name"        = "vpc-uat-app-lb"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                    = {
          [32m+[0m [0m"Name"        = "vpc-uat-app-lb"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                      = (known after apply)
      [32m+[0m [0m[1m[0mxff_header_processing_mode[0m[0m                  = "append"
      [32m+[0m [0m[1m[0mzone_id[0m[0m                                     = (known after apply)

      [32m+[0m [0msubnet_mapping {
          [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0mipv6_address[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0moutpost_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mprivate_ipv4_address[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0msubnet_id[0m[0m            = (known after apply)
        }
    }

[1m  # aws_lb.web_alb[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb" "web_alb" {
      [32m+[0m [0m[1m[0marn[0m[0m                                         = (known after apply)
      [32m+[0m [0m[1m[0marn_suffix[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mdesync_mitigation_mode[0m[0m                      = "defensive"
      [32m+[0m [0m[1m[0mdns_name[0m[0m                                    = (known after apply)
      [32m+[0m [0m[1m[0mdrop_invalid_header_fields[0m[0m                  = false
      [32m+[0m [0m[1m[0menable_deletion_protection[0m[0m                  = false
      [32m+[0m [0m[1m[0menable_http2[0m[0m                                = true
      [32m+[0m [0m[1m[0menable_tls_version_and_cipher_suite_headers[0m[0m = false
      [32m+[0m [0m[1m[0menable_waf_fail_open[0m[0m                        = false
      [32m+[0m [0m[1m[0menable_xff_client_port[0m[0m                      = false
      [32m+[0m [0m[1m[0mid[0m[0m                                          = (known after apply)
      [32m+[0m [0m[1m[0midle_timeout[0m[0m                                = 60
      [32m+[0m [0m[1m[0minternal[0m[0m                                    = false
      [32m+[0m [0m[1m[0mip_address_type[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mload_balancer_type[0m[0m                          = "application"
      [32m+[0m [0m[1m[0mname[0m[0m                                        = "vpc-uat-web-lb"
      [32m+[0m [0m[1m[0mpreserve_host_header[0m[0m                        = false
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0msubnets[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                        = {
          [32m+[0m [0m"Name"        = "vpc-uat-web-lb"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                    = {
          [32m+[0m [0m"Name"        = "vpc-uat-web-lb"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                      = (known after apply)
      [32m+[0m [0m[1m[0mxff_header_processing_mode[0m[0m                  = "append"
      [32m+[0m [0m[1m[0mzone_id[0m[0m                                     = (known after apply)

      [32m+[0m [0msubnet_mapping {
          [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0mipv6_address[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0moutpost_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mprivate_ipv4_address[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0msubnet_id[0m[0m            = (known after apply)
        }
    }

[1m  # aws_lb_listener.app_https[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_listener" "app_https" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mload_balancer_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m              = 443
      [32m+[0m [0m[1m[0mprotocol[0m[0m          = "HTTPS"
      [32m+[0m [0m[1m[0mssl_policy[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)

      [32m+[0m [0mdefault_action {
          [32m+[0m [0m[1m[0morder[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtarget_group_arn[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m             = "forward"
        }
    }

[1m  # aws_lb_listener.web_https[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_listener" "web_https" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mload_balancer_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m              = 443
      [32m+[0m [0m[1m[0mprotocol[0m[0m          = "HTTPS"
      [32m+[0m [0m[1m[0mssl_policy[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)

      [32m+[0m [0mdefault_action {
          [32m+[0m [0m[1m[0morder[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtarget_group_arn[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m             = "forward"
        }
    }

[1m  # aws_lb_listener_rule.target_group_rule[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_listener_rule" "target_group_rule" {
      [32m+[0m [0m[1m[0marn[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mlistener_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpriority[0m[0m     = 1
      [32m+[0m [0m[1m[0mtags_all[0m[0m     = (known after apply)

      [32m+[0m [0maction {
          [32m+[0m [0m[1m[0morder[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtarget_group_arn[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m             = "forward"
        }

      [32m+[0m [0mcondition {

          [32m+[0m [0mpath_pattern {
              [32m+[0m [0m[1m[0mvalues[0m[0m = [
                  [32m+[0m [0m"/login/*",
                ]
            }
        }
    }

[1m  # aws_lb_listener_rule.web_target_group_rule[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_listener_rule" "web_target_group_rule" {
      [32m+[0m [0m[1m[0marn[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mlistener_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpriority[0m[0m     = 1
      [32m+[0m [0m[1m[0mtags_all[0m[0m     = (known after apply)

      [32m+[0m [0maction {
          [32m+[0m [0m[1m[0morder[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtarget_group_arn[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m             = "forward"
        }

      [32m+[0m [0mcondition {
          [32m+[0m [0mhost_header {
              [32m+[0m [0m[1m[0mvalues[0m[0m = [
                  [32m+[0m [0m"bank.awsemea.com",
                ]
            }
        }
    }

[1m  # aws_lb_target_group.app_lb_target_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_target_group" "app_lb_target_group" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0marn_suffix[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mconnection_termination[0m[0m             = false
      [32m+[0m [0m[1m[0mderegistration_delay[0m[0m               = "300"
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mip_address_type[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mlambda_multi_value_headers_enabled[0m[0m = false
      [32m+[0m [0m[1m[0mload_balancing_algorithm_type[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mload_balancing_cross_zone_enabled[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m                        = "apptg"
      [32m+[0m [0m[1m[0mport[0m[0m                               = 443
      [32m+[0m [0m[1m[0mpreserve_client_ip[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                           = "HTTPS"
      [32m+[0m [0m[1m[0mprotocol_version[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mproxy_protocol_v2[0m[0m                  = false
      [32m+[0m [0m[1m[0mslow_start[0m[0m                         = 0
      [32m+[0m [0m[1m[0mtags_all[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mtarget_type[0m[0m                        = "instance"
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                             = (known after apply)

      [32m+[0m [0mhealth_check {
          [32m+[0m [0m[1m[0menabled[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mhealthy_threshold[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0minterval[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mmatcher[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mpath[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mport[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mprotocol[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtimeout[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0munhealthy_threshold[0m[0m = (known after apply)
        }

      [32m+[0m [0mstickiness {
          [32m+[0m [0m[1m[0mcookie_duration[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mcookie_name[0m[0m     = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m            = (known after apply)
        }

      [32m+[0m [0mtarget_failover {
          [32m+[0m [0m[1m[0mon_deregistration[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mon_unhealthy[0m[0m      = (known after apply)
        }
    }

[1m  # aws_lb_target_group.web_lb_target_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_target_group" "web_lb_target_group" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0marn_suffix[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mconnection_termination[0m[0m             = false
      [32m+[0m [0m[1m[0mderegistration_delay[0m[0m               = "300"
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mip_address_type[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mlambda_multi_value_headers_enabled[0m[0m = false
      [32m+[0m [0m[1m[0mload_balancing_algorithm_type[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mload_balancing_cross_zone_enabled[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m                        = "webtg"
      [32m+[0m [0m[1m[0mport[0m[0m                               = 443
      [32m+[0m [0m[1m[0mpreserve_client_ip[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mprotocol[0m[0m                           = "HTTPS"
      [32m+[0m [0m[1m[0mprotocol_version[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mproxy_protocol_v2[0m[0m                  = false
      [32m+[0m [0m[1m[0mslow_start[0m[0m                         = 0
      [32m+[0m [0m[1m[0mtags_all[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mtarget_type[0m[0m                        = "instance"
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                             = (known after apply)

      [32m+[0m [0mhealth_check {
          [32m+[0m [0m[1m[0menabled[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mhealthy_threshold[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0minterval[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mmatcher[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mpath[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mport[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mprotocol[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtimeout[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0munhealthy_threshold[0m[0m = (known after apply)
        }

      [32m+[0m [0mstickiness {
          [32m+[0m [0m[1m[0mcookie_duration[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mcookie_name[0m[0m     = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m            = (known after apply)
        }

      [32m+[0m [0mtarget_failover {
          [32m+[0m [0m[1m[0mon_deregistration[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mon_unhealthy[0m[0m      = (known after apply)
        }
    }

[1m  # aws_nat_gateway.web_nat_gateway[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_nat_gateway" "web_nat_gateway" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mconnectivity_type[0m[0m    = "public"
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = (known after apply)
    }

[1m  # aws_route_table.app_route_table[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "app_route_table" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table.db_route_table[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "db_route_table" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table.web_route_table[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "web_route_table" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table_association.app_subnet_association[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "app_subnet_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.app_subnet_association[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "app_subnet_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.db_subnet_association[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "db_subnet_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.db_subnet_association[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "db_subnet_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.web_subnet_association[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "web_subnet_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.web_subnet_association[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "web_subnet_association" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_security_group.app_sg[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "app_sg" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Security group for the application layer"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = "Allow all outbound traffic"
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = (known after apply)
              [32m+[0m [0mdescription      = "Allow HTTP traffic from web layer"
              [32m+[0m [0mfrom_port        = 443
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 443
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = (known after apply)
              [32m+[0m [0mdescription      = "Allow SSH traffic from web layer"
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # aws_security_group.db_sg[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "db_sg" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Security group for the database layer"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = "Allow all outbound traffic"
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = (known after apply)
              [32m+[0m [0mdescription      = "Allow MSSQL traffic from app sg"
              [32m+[0m [0mfrom_port        = 3306
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 3306
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "db-"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # aws_security_group.web_sg[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "web_sg" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Security group for the web layer"
      [32m+[0m [0m[1m[0megress[0m[0m                 = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = "Allow all outbound traffic"
              [32m+[0m [0mfrom_port        = 0
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "-1"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 0
            },
        ]
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = [
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = "Allow HTTPS traffic from anywhere"
              [32m+[0m [0mfrom_port        = 443
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 443
            },
          [32m+[0m [0m{
              [32m+[0m [0mcidr_blocks      = [
                  [32m+[0m [0m"0.0.0.0/0",
                ]
              [32m+[0m [0mdescription      = "Allow SSH traffic from anywhere"
              [32m+[0m [0mfrom_port        = 22
              [32m+[0m [0mipv6_cidr_blocks = []
              [32m+[0m [0mprefix_list_ids  = []
              [32m+[0m [0mprotocol         = "tcp"
              [32m+[0m [0msecurity_groups  = []
              [32m+[0m [0mself             = false
              [32m+[0m [0mto_port          = 22
            },
        ]
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # aws_subnet.private_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"        = "vpc-uat-private-1-eu-west-1a"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"        = "vpc-uat-private-1-eu-west-1a"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_subnet.private_subnet[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"        = "vpc-uat-private-2-eu-west-1b"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"        = "vpc-uat-private-2-eu-west-1b"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_subnet.private_subnet[2][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"        = "vpc-uat-private-3-eu-west-1a"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"        = "vpc-uat-private-3-eu-west-1a"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_subnet.private_subnet[3][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"        = "vpc-uat-private-4-eu-west-1b"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"        = "vpc-uat-private-4-eu-west-1b"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_subnet.public_subnet[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"        = "vpc-uat-public-eu-west-1a"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"        = "vpc-uat-public-eu-west-1a"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_subnet.public_subnet[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "eu-west-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = (known after apply)
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name"        = "vpc-uat-public-eu-west-1b"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"Name"        = "vpc-uat-public-eu-west-1b"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_vpc.new_vpc[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "new_vpc" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0menable_network_address_usage_metrics[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv4_ipam_pool_id[0m[0m                    = "ipam-pool-06b8005b3ab484b83"
      [32m+[0m [0m[1m[0mipv4_netmask_length[0m[0m                  = 16
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = {
          [32m+[0m [0m"Name"        = "vpc-uat"
          [32m+[0m [0m"environment" = "uat"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = {
          [32m+[0m [0m"Name"        = "vpc-uat"
          [32m+[0m [0m"environment" = "uat"
        }
    }

[0m[1mPlan:[0m 40 to add, 0 to change, 0 to destroy.
[0m

